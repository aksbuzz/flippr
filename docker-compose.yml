services:
  postgres:
    image: postgres:17-alpine
    container_name: flippr_postgres
    environment:
      POSTGRES_USER: flippr_user
      POSTGRES_PASSWORD: flippr_password
      POSTGRES_DB: flippr_db
    ports:
      - 5432:5432
    volumes:
      - flippr_postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    
  redis:
    image: redis:7-alpine
    container_name: flippr_redis
    ports:
      - 6379:6379
    volumes:
      - flippr_redis_data:/data
    restart: unless-stopped

  # management-api:
  #   container_name: flippr_management_server
  #   build:
  #     context: ./services/management
  #   command: npm run start:server
  #   ports:
  #     - "${PORT:-4000}:4000"
  #   env_file:
  #     - ./services/management/.env
  #   depends_on:
  #     - postgres
  #     - redis
  #   restart: unless-stopped

  # management-worker:
  #   container_name: flippr_management_worker
  #   build:
  #     context: ./services/management
  #   command: npm run start:worker
  #   env_file:
  #     - ./services/management/.env
  #   depends_on:
  #     - postgres
  #     - redis
  
  # evaluation-api:
  #   container_name: flippr_evaluation_server
  #   build:
  #     context: ./services/evaluation
  #   ports:
  #     - "8080:8080"
  #   env_file:
  #     - ./services/evaluation/.env
  #   depends_on:
  #     - postgres
  #     - redis
  #   restart: unless-stopped

  # ui:
  #   build:
  #     context: ./ui
  #   container_name: flippr_ui
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - management-api
  #   restart: unless-stopped

volumes:
  flippr_postgres_data:
  flippr_redis_data:
